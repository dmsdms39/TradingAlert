services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # 애플리케이션용
      - "15672:15672"    # 관리 UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis
    restart: unless-stopped

#  redis_exporter:
#    image: oliver006/redis_exporter:latest
#    container_name: redis_exporter
#    environment:
#      - REDIS_ADDR=redis://docker_redis:6379
#    ports:
#      - "9121:9121"
#    depends_on:
#      - redis

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: project
      MYSQL_USER: user
      MYSQL_PASSWORD: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped

volumes:
  rabbitmq_data:
  redis_data:
  mysql_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
